#!/usr/bin/env python
from misc.utility.scons_hints import *

Import("env")
Import("env_modules")

env_csg = env_modules.Clone()

# Thirdparty source files

thirdparty_obj = []

thirdparty_dir = "#thirdparty/manifold/"
thirdparty_sources = [
    "src/polygon/src/polygon.cpp",
    "src/cross_section/src/cross_section.cpp",
    "src/manifold/src/constructors.cpp",
    "src/manifold/src/edge_op.cpp",
    "src/manifold/src/face_op.cpp",
    "src/manifold/src/impl.cpp",
    "src/manifold/src/boolean_result.cpp",
    "src/manifold/src/boolean3.cpp",
    "src/manifold/src/manifold.cpp",
    "src/manifold/src/properties.cpp",
    "src/manifold/src/smoothing.cpp",
    "src/manifold/src/sort.cpp",
    "src/manifold/src/csg_tree.cpp",
    "src/manifold/src/subdivision.cpp",
    "src/manifold/src/quickhull.cpp",
]

thirdparty_sources = [thirdparty_dir + file for file in thirdparty_sources]
env_csg.Prepend(
    CPPPATH=[
        "#thirdparty/glm",
        "#thirdparty/quickhull",
        thirdparty_dir + "src/polygon/include",
        thirdparty_dir + "src/manifold/include",
        thirdparty_dir + "src/manifold/include/manifold",
        thirdparty_dir + "src/utilities/include",
        thirdparty_dir + "src/collider/include",
        thirdparty_dir + "src/cross_section/include",
    ]
)
env_thirdparty = env_csg.Clone()
env_thirdparty.disable_warnings()
env_thirdparty.add_source_files(thirdparty_obj, thirdparty_sources)
env_thirdparty.add_source_files(thirdparty_obj, "#thirdparty/quickhull/QuickHull.cpp")
env.modules_sources += thirdparty_obj

# Godot's own source files
env_csg.add_source_files(env.modules_sources, "*.cpp")
if env.editor_build:
    env_csg.add_source_files(env.modules_sources, "editor/*.cpp")
