name: Package V-Sekai SDK

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "**"

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-deploy
  cancel-in-progress: true

env:
  GODOT_REF: groups-4.3.2024-07-02T224837Z
  GODOT_REPOSITORY: v-sekai/godot
  SCONSFLAGS: verbose=yes warnings=extra werror=no module_text_server_fb_enabled=yes use_thinlto=yes
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  EM_VERSION: 3.1.18
  EM_CACHE_FOLDER: "emsdk-cache"

jobs:
  godot-build:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.cache-name }}
    strategy:
      matrix:
        include:
          - name: vsekai_game_x86_64
            os: ubuntu-22.04
            cache-name: windows-editor-x86_64
            target: editor
            tests: false
            sconsflags: linker=gold precision=double use_mingw=yes
            doc-test: false
            bin: ./19_godot/bin/godot.linuxbsd.editor.double.x86_64
            deploy-bin: ./19_godot/bin/godot.windows.editor.double.x86_64.exe
            editor-bin-name: godot.windows.editor.double.x86_64.exe
            proj-conv: false
            artifact: true
            platform: linuxbsd
            deploy: true
            deploy-pdb: false
            deploy-platform: windows
            export-platform: Windows
            deploy-arch: x86_64
            arch: x86_64
            deploy-target: editor
            game_name: vsekai_game
            game-repository: v-sekai/v-sekai-game
            game-repository-ref: bc396caf2a62ca93e9adf9ae6116e3804e5046df

          - name: model_explorer_windows_x86_64
            os: ubuntu-22.04
            cache-name: windows-editor-x86_64
            target: editor
            tests: false
            sconsflags: linker=gold precision=double use_mingw=yes
            doc-test: false
            bin: ./19_godot/bin/godot.linuxbsd.editor.double.x86_64
            deploy-bin: ./19_godot/bin/godot.windows.editor.double.x86_64.exe
            editor-bin-name: godot.windows.editor.double.x86_64.exe
            proj-conv: false
            artifact: false
            platform: linuxbsd
            deploy: true
            deploy-pdb: false
            deploy-platform: windows
            export-platform: Windows
            deploy-arch: x86_64
            arch: x86_64
            deploy-target: editor
            game_name: model_explorer_game
            game-repository: V-Sekai/TOOL_model_explorer.git
            game-repository-ref: ca140cd9e3f1d8f0b306a6ebf61f9f103694e463

          - name: xr_grid_windows_x86_64
            os: ubuntu-22.04
            cache-name: windows-editor-x86_64
            target: editor
            tests: false
            sconsflags: linker=gold precision=double use_mingw=yes
            doc-test: false
            bin: ./19_godot/bin/godot.linuxbsd.editor.double.x86_64
            deploy-bin: ./19_godot/bin/godot.windows.editor.double.x86_64.exe
            editor-bin-name: godot.windows.editor.double.x86_64.exe
            proj-conv: false
            artifact: false
            platform: linuxbsd
            deploy: true
            deploy-pdb: false
            deploy-platform: windows
            export-platform: Windows
            deploy-arch: x86_64
            arch: x86_64
            deploy-target: editor
            game_name: grid_game
            game-repository: V-Sekai/xr-grid
            game-repository-ref: 08640744eaf972b00519cc726d40a771f5b276f0

          - name: editor_linux_x86_64
            os: ubuntu-22.04
            cache-name: linux-editor-x86_64
            target: editor
            tests: false
            sconsflags: linker=gold precision=double use_llvm=yes
            doc-test: false
            bin: ./19_godot/bin/godot.linuxbsd.editor.double.x86_64.llvm
            deploy-bin: ./19_godot/bin/godot.linuxbsd.editor.double.x86_64.llvm
            editor-bin-name: godot.linuxbsd.editor.double.x86_64.llvm
            proj-conv: false
            artifact: true
            platform: linuxbsd
            deploy: true
            deploy-platform: linux
            export-platform: Linux
            deploy-arch: x86_64
            arch: x86_64
            deploy-target: editor
            game_name: vsekai_game
            game-repository: v-sekai/v-sekai-game
            game-repository-ref: bc396caf2a62ca93e9adf9ae6116e3804e5046df

          - name: editor_web_wasm32
            os: ubuntu-22.04
            cache-name: web-editor-wasm32
            target: editor
            tests: false
            sconsflags: linker=gold precision=double
            doc-test: false
            bin: ./19_godot/bin/godot.web.editor.double.wasm32
            editor-bin-name: godot.web.editor.double.wasm32 
            proj-conv: false
            artifact: true
            platform: web
            deploy: false
            export-platform: Web
            build-arch: wasm32
            arch: wasm32

          - name: editor_android_arm64
            os: ubuntu-22.04
            cache-name: android-editor-arm64
            target: editor
            tests: false
            sconsflags: linker=gold precision=double use_llvm=yes module_mvsqlite_enabled=no module_speech_enabled=no
            doc-test: false
            bin: ./19_godot/bin/libgodot.android.editor.double.arm64.so
            editor-bin-name: libgodot.android.editor.double.arm64.so
            proj-conv: false
            artifact: true
            platform: android
            export-platform: Android
            arch: arm64
            deploy: false

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Linux dependencies for gold linker
        if: ${{ matrix.platform == 'linux' }}
        run: |
          sudo apt-get install -qq binutils
        shell: bash

      - name: Install MinGW
        if: ${{ matrix.deploy-platform == 'windows' }}
        run: |
          sudo add-apt-repository ppa:savoury1/build-tools
          sudo apt-get update
          sudo apt-get install mingw-w64
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
        shell: bash

      - name: Setup Godot build cache
        uses: ./.github/actions/godot-world-cache
        with:
          cache-name: ${{ matrix.cache-name }}
          continue-on-error: true

      - name: Setup Vulkan SDK
        if: ${{ matrix.platform == 'macos' }}
        run: |
          sh ./.github/install_vulkan_sdk_macos.sh

      - name: Set up Emscripten latest
        if: ${{ matrix.platform == 'web' ||  matrix.deploy-platform == 'web'}}
        uses: mymindstorm/setup-emsdk@6ab9eb1bda2574c4ddb79809fc9247783eaf9021 # v14
        with:
          version: ${{env.EM_VERSION}}
          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}

      - name: Verify Emscripten setup
        if: ${{ matrix.platform == 'web' ||  matrix.deploy-platform == 'web'}}
        run: |
          emcc -v
        shell: bash
  
      - name: Setup python, scons and golang
        uses: ./.github/actions/godot-world-deps

      - name: Set up .NET Sdk
        uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4.0.0
        if: ${{ matrix.build-mono }}
        with:
          dotnet-version: "6.0.x"

      - name: Setup GCC problem matcher
        uses: ammaraskar/gcc-problem-matcher@0f9c86f9e693db67dacf53986e1674de5f2e5f28 # master

      - name: Compilation
        uses: ./.github/actions/godot-world-build
        if: ${{ matrix.platform != 'android' }}
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
          platform: ${{ matrix.platform }}
          target: ${{ matrix.target }}
          tests: ${{ matrix.tests }}
          deploy: ${{ matrix.deploy }}
          arch: ${{ matrix.arch }}

      - name: Compilation
        if: ${{ matrix.platform == 'macos' }}
        uses: ./.github/actions/godot-world-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
          platform: ${{ matrix.platform }}
          target: ${{ matrix.target }}
          tests: false
          deploy: false
          arch: x86_64

      - name: Compilation
        if: ${{ matrix.platform == 'android' }}
        uses: ./.github/actions/godot-world-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
          platform: ${{ matrix.platform }}
          target: ${{ matrix.target }}
          tests: false
          deploy: false
          arch: arm32
  
      - name: Compilation
        if: ${{ matrix.platform == 'android' }}
        uses: ./.github/actions/godot-world-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} generate_apk=yes
          platform: ${{ matrix.platform }}
          target: ${{ matrix.target }}
          tests: false
          deploy: false
          arch: arm64

      - name: Compilation
        if: ${{ matrix.deploy }}
        uses: ./.github/actions/godot-world-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
          platform: ${{ matrix.deploy-platform }}
          target: ${{ matrix.deploy-target }}
          tests: false
          deploy: false
          arch: ${{ matrix.deploy-arch }}

      - name: generateGodotTemplates
        if: ${{ matrix.arch == 'arm64' && matrix.platform == 'android' }}
        run: |
            cd 19_godot/platform/android/java
            ./gradlew generateGodotTemplates
        shell: bash

      - name: Export and Prepare Game Artifacts
        if: ${{ matrix.deploy }}
        uses: ./.github/actions/godot-world-godot-export
        with:
          deploy-platform: ${{ matrix.deploy-platform }}
          export-platform: ${{ matrix.export-platform }}
          bin: ${{ matrix.bin }}
          deploy-bin: ${{ matrix.deploy-bin }}
          game-name: ${{ matrix.GAME_NAME }}
          game-repository: ${{ matrix.game-repository }}
          game-repository-ref: ${{ matrix.game-repository-ref }}

      - name: Generate C# glue
        if: ${{ matrix.build-mono }}
        run: |
          ${{ matrix.bin }} --headless --generate-mono-glue ./modules/mono/glue || true
        shell: bash

      - name: Build .NET solutions
        if: ${{ matrix.build-mono }}
        run: |
          ./modules/mono/build_scripts/build_assemblies.py --godot-output-dir=./bin --godot-platform=linuxbsd
        shell: bash

      - name: Unit tests
        if: ${{ matrix.tests }}
        run: |
          ${{ matrix.bin }} --version
          ${{ matrix.bin }} --help
          ${{ matrix.bin }} --test --headless
        shell: bash

      - name: Check for class reference updates
        if: ${{ matrix.doc-test }}
        run: |
          echo "Running --doctool to see if this changes the public API without updating the documentation."
          echo -e "If a diff is shown, it means that your code/doc changes are incomplete and you should update the class reference with --doctool.\n\n"
          ${{ matrix.bin }} --doctool --headless 2>&1 > /dev/null || true
          git diff --color --exit-code && ! git ls-files --others --exclude-standard | sed -e 's/^/New doc file missing in PR: /' | grep 'xml$'
        shell: bash

      - name: Test project converter
        if: ${{ matrix.proj-conv }}
        run: |
          mkdir -p converter_test
          cd converter_test
          touch project.godot
          ${{ matrix.bin }} --headless --validate-conversion-3to4
          cd ..
          rm converter_test -rf
        shell: bash

      - name: Prepare artifact
        if: ${{ matrix.artifact }}
        run: |
          chmod +x 19_godot/bin/godot.* || true
        shell: bash

      - name: Upload artifact
        uses: ./.github/actions/upload-world-artifact
        if: ${{ matrix.artifact }}
        with:
          name: ${{ matrix.cache-name }}

  index:
    needs: godot-build
    name: Generate index.html
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - triplet: x86_64-unknown-linux-gnu

    steps:
      - name: Checkout desync
        uses: actions/checkout@v2
        with:
          repository: V-Sekai/desync
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.15.6"

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - run: go test
      - run: GOOS=windows GOARCH=amd64 go build -o ./archive/desync-windows-amd64.exe ./cmd/desync
      - run: GOOS=darwin GOARCH=amd64 go build -o ./archive/desync-macos-amd64 ./cmd/desync
      - run: GOOS=linux GOARCH=amd64 go build -o ./archive/desync-linux-amd64 ./cmd/desync
      - name: Debug
        shell: bash
        run: |
          pwd
          ls -la

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: other

      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: other

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache CMake build
        uses: actions/cache@v2
        with:
          path: other/**/build
          key: ${{ runner.os }}-cmake-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cmake-

      - run: chmod +x ./archive/desync-linux-amd64

      - name: Install Ninja Build
        run: sudo apt-get update && sudo apt-get install -y libglfw3-dev libxinerama-dev libxcursor-dev libxi-dev libsuitesparse-dev libmetis-dev ninja-build

      - name: Package Cockroachdb
        run: |
          mkdir -p archive/store
          wget -qO- https://binaries.cockroachdb.com/cockroach-v23.2.3.linux-amd64.tgz | tar xvz
          mv cockroach-v23.2.3.linux-amd64/cockroach cockroach-v23.2.3.linux-amd64/cockroach-${{ matrix.triplet }}
          cp -i cockroach-v23.2.3.linux-amd64/cockroach-${{ matrix.triplet }} ./other/

      - name: Package Foundationdb
        run: |
          mkdir -p archive/store
          wget https://github.com/apple/foundationdb/releases/download/7.1.29/foundationdb-clients_7.1.29-1_amd64.deb
          wget https://github.com/apple/foundationdb/releases/download/7.1.29/foundationdb-server_7.1.29-1_amd64.deb
          wget https://github.com/apple/foundationdb/releases/download/7.1.29/foundationdb-7.1.29-x64.msi
          wget https://github.com/apple/foundationdb/releases/download/7.1.29/FoundationDB-7.1.29_arm64.pkg
          mv foundationdb-clients_7.1.29-1_amd64.deb other/
          mv foundationdb-server_7.1.29-1_amd64.deb other/
          mv foundationdb-7.1.29-x64.msi other/
          mv FoundationDB-7.1.29_arm64.pkg other/

      - name: Package Code
        # This script is used to package the code into chunks of 64MB. The chunk size of 64MB is a recommendation from a large game studio's CDN engineering team blog.
        run: |
          mkdir -p archive/store
          for object in $(ls other); do
            ./archive/desync-linux-amd64 tar -i -s archive/store --chunk-size 4096:16384:65536 archive/$object.caidx other/$object
          done

      - name: Generate index.html
        run: |
          echo "<!DOCTYPE html>" > ./archive/index.html
          echo "<html>" >> ./archive/index.html
          echo "<head>" >> ./archive/index.html
          echo "<title>V-Sekai Kit Contents</title>" >> ./archive/index.html
          echo "</head>" >> ./archive/index.html
          echo "<body>" >> ./archive/index.html
          echo "<h1>V-Sekai Kit Contents</h1>" >> ./archive/index.html
          echo "<h2>Instructions</h2>" >> ./archive/index.html

          # Windows
          echo "<h3>Windows</h3>" >> ./archive/index.html
          echo "<pre><code>./desync-windows-amd64.exe untar -s https://v-sekai.github.io/world/store -i https://v-sekai.github.io/world/11_vsekai_game.caidx VSK_game --no-same-owner</code></pre>" >> ./archive/index.html
          echo "<pre><code>./desync-windows-amd64.exe untar -s https://v-sekai.github.io/world/store -i https://v-sekai.github.io/world/19_godot.caidx VSK_godot --no-same-owner</code></pre>" >> ./archive/index.html

          # Mac
          echo "<h3>Mac</h3>" >> ./archive/index.html
          echo "<pre><code>./desync-macos-amd64 untar -s https://v-sekai.github.io/world/store -i https://v-sekai.github.io/world/11_vsekai_game.caidx VSK_game --no-same-owner</code></pre>" >> ./archive/index.html
          echo "<pre><code>./desync-macos-amd64 untar -s https://v-sekai.github.io/world/store -i https://v-sekai.github.io/world/19_godot.caidx VSK_godot --no-same-owner</code></pre>" >> ./archive/index.html

          # Linux
          echo "<h3>Linux</h3>" >> ./archive/index.html
          echo "<pre><code>./desync-linux-amd64 untar -s https://v-sekai.github.io/world/store -i https://v-sekai.github.io/world/11_vsekai_game.caidx VSK_game --no-same-owner</code></pre>" >> ./archive/index.html
          echo "<pre><code>./desync-linux-amd64 untar -s https://v-sekai.github.io/world/store -i https://v-sekai.github.io/world/19_godot.caidx VSK_godot --no-same-owner</code></pre>" >> ./archive/index.html

          echo "<ul>" >> ./archive/index.html
          # List desync binaries first
          for file in $(ls ./archive/desync-* 2> /dev/null); do
          stripped_file=$(echo "$file" | sed 's|./archive/||')
          echo "<li><a href=\"https://v-sekai.github.io/world/$stripped_file\">$stripped_file</a></li>" >> ./archive/index.html
          done
          # Then list caidx files
          for file in $(ls ./archive/*.caidx 2> /dev/null); do
          stripped_file=$(echo "$file" | sed 's|./archive/||')
          echo "<li><a href=\"https://v-sekai.github.io/world/$stripped_file\">$stripped_file</a></li>" >> ./archive/index.html
          done
          # Then list the remaining files
          find ./archive -type f ! -name 'desync-*' ! -name '*.caidx' | while read file; do
          stripped_file=$(echo "$file" | sed 's|./archive/||')
          echo "<li><a href=\"https://v-sekai.github.io/world/$stripped_file\">$stripped_file</a></li>" >> ./archive/index.html
          done
          echo "</ul>" >> ./archive/index.html
          echo "</body>" >> ./archive/index.html
          echo "</html>" >> ./archive/index.html

      - name: Install spaces-cli
        if: github.ref == 'refs/heads/main'
        run: |
          npm install -g spaces-cli

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: archive
          path: "archive"

  pages:
    if: github.ref == 'refs/heads/main'
    needs: index
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: archive
          path: "archive"

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "archive"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
